name: Build and Run Apptainer Container

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Checkout code with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Show submodule status
      run: git submodule status

    - name: Install Apptainer
      run: |
        sudo apt-get update
        sudo apt-get install -y apptainer sshpass

    - name: Verify Apptainer version
      run: apptainer --version

    - name: Build SIF image with Apptainer
      run: |
        apptainer build grayscale.sif Singularity.def

    - name: Prepare input and output folders
      run: |
        mkdir -p input output
        echo "P3\n1 1\n255\n255 0 0" > input/sample.ppm  # 示例图片（红色像素）

    - name: Run grayscale application in container
      run: |
        apptainer run grayscale.sif input output Average

    - name: Upload output images
      uses: actions/upload-artifact@v4
      with:
        name: pgm-results
        path: output/

    - name: Upload grayscale.sif
      uses: actions/upload-artifact@v4
      with:
        name: grayscale-sif
        path: grayscale.sif

    - name: Remove old host-key And Add new host-key to known_hosts
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/known_hosts
        ssh-keygen -R login.g100.cineca.it || true
        ssh-keyscan -H login.g100.cineca.it >> ~/.ssh/known_hosts

    - name: Transfer job script and sif file to cluster via scp
      env:
        SLURM_USER: ${{ secrets.SLURM_USER }}
        SLURM_HOST: ${{ secrets.SLURM_HOST }}
        SLURM_PASSWORD: ${{ secrets.SLURM_PASSWORD }}
      run: |
        sshpass -p "${{ secrets.SLURM_PASSWORD }}" scp -o StrictHostKeyChecking=no grayscale.sif ${{ secrets.SLURM_USER }}@${{ secrets.SLURM_HOST }}:~/seproject/
        sshpass -p "${{ secrets.SLURM_PASSWORD }}" scp -o StrictHostKeyChecking=no job_script.slurm ${{ secrets.SLURM_USER }}@${{ secrets.SLURM_HOST }}:~/seproject/

    - name: Submit job to cluster via ssh
      env:
        SLURM_USER: ${{ secrets.SLURM_USER }}
        SLURM_HOST: ${{ secrets.SLURM_HOST }}
        SLURM_PASSWORD: ${{ secrets.SLURM_PASSWORD }}
      run: |
        sshpass -p "${{ secrets.SLURM_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SLURM_USER }}@${{ secrets.SLURM_HOST }} \
        "cd ~/seproject && dos2unix job_script.slurm && sbatch job_script.slurm"
